{"ast":null,"code":"import { GOOGLE_USER_INFO_URL, LOCAL_BACKEND_BASE_URL } from \"../constants\";\nimport axios from 'axios';\nexport default class GoogleServiceSingleton {}\nGoogleServiceSingleton.getUserInfo = access_token => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  };\n  // https://any-api.com/googleapis_com/oauth2/docs/userinfo/oauth2_userinfo_v2_me_get\n  return axios.get(GOOGLE_USER_INFO_URL, config).then(firstResponse => {\n    const googleResponse = firstResponse.data;\n    const savePassengerURL = LOCAL_BACKEND_BASE_URL + 'passenger/savePassenger';\n    const savePassengerRequest = {\n      emailId: googleResponse.email,\n      admin: 0,\n      firstName: googleResponse.given_name,\n      lastName: googleResponse.family_name,\n      phoneNumber: 1234567890\n    };\n    return axios.post(savePassengerURL, savePassengerRequest).then(secondResponse => {\n      if (!secondResponse) {\n        throw new Error('Backend response undefined');\n      }\n      return {\n        ...googleResponse,\n        userId: secondResponse.data.userId,\n        admin: secondResponse.data.admin\n      };\n    }).catch(error => {\n      console.log(\"Error in Backend call, setting userId as null\", error);\n      return {\n        ...googleResponse,\n        userId: null,\n        admin: 0\n      };\n    });\n  }).catch(error => {\n    console.log(\"Error in Google Oauth call\", error);\n  });\n};","map":{"version":3,"names":["GOOGLE_USER_INFO_URL","LOCAL_BACKEND_BASE_URL","axios","GoogleServiceSingleton","getUserInfo","access_token","config","headers","Authorization","get","then","firstResponse","googleResponse","data","savePassengerURL","savePassengerRequest","emailId","email","admin","firstName","given_name","lastName","family_name","phoneNumber","post","secondResponse","Error","userId","catch","error","console","log"],"sources":["/Users/anjuvarghese/Downloads/Flight Reservation System Project 3/Flight-Reservation-System-Frontend/src/services/google-service-singleton.js"],"sourcesContent":["import {GOOGLE_USER_INFO_URL, LOCAL_BACKEND_BASE_URL} from \"../constants\";\nimport axios from 'axios';\n\nexport default class GoogleServiceSingleton {\n    static getUserInfo = (access_token) => {\n        const config = {\n            headers: {\n                Authorization: `Bearer ${access_token}`\n            }\n        };\n        // https://any-api.com/googleapis_com/oauth2/docs/userinfo/oauth2_userinfo_v2_me_get\n        return axios.get(GOOGLE_USER_INFO_URL, config)\n            .then(firstResponse => {\n                const googleResponse = firstResponse.data;\n                const savePassengerURL = LOCAL_BACKEND_BASE_URL + 'passenger/savePassenger';\n                const savePassengerRequest = {\n                    emailId: googleResponse.email,\n                    admin: 0,\n                    firstName: googleResponse.given_name,\n                    lastName: googleResponse.family_name,\n                    phoneNumber: 1234567890,\n                }\n                return axios.post(savePassengerURL, savePassengerRequest)\n                    .then((secondResponse) => {\n                        if (!secondResponse) {\n                            throw new Error('Backend response undefined');\n                        }\n                            return {\n                                ...googleResponse,\n                                userId: secondResponse.data.userId,\n                                admin: secondResponse.data.admin,\n                            };\n                        }\n                    )\n                    .catch(error => {\n                        console.log(\"Error in Backend call, setting userId as null\", error);\n                        return {\n                            ...googleResponse,\n                            userId: null,\n                            admin: 0,\n                        }\n                    })\n            })\n            .catch(error => {\n                console.log(\"Error in Google Oauth call\", error);\n            });\n    }\n}"],"mappings":"AAAA,SAAQA,oBAAoB,EAAEC,sBAAsB,QAAO,cAAc;AACzE,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAe,MAAMC,sBAAsB,CAAC;AAAvBA,sBAAsB,CAChCC,WAAW,GAAIC,YAAY,IAAK;EACnC,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAE,UAAUH,YAAY;IACzC;EACJ,CAAC;EACD;EACA,OAAOH,KAAK,CAACO,GAAG,CAACT,oBAAoB,EAAEM,MAAM,CAAC,CACzCI,IAAI,CAACC,aAAa,IAAI;IACnB,MAAMC,cAAc,GAAGD,aAAa,CAACE,IAAI;IACzC,MAAMC,gBAAgB,GAAGb,sBAAsB,GAAG,yBAAyB;IAC3E,MAAMc,oBAAoB,GAAG;MACzBC,OAAO,EAAEJ,cAAc,CAACK,KAAK;MAC7BC,KAAK,EAAE,CAAC;MACRC,SAAS,EAAEP,cAAc,CAACQ,UAAU;MACpCC,QAAQ,EAAET,cAAc,CAACU,WAAW;MACpCC,WAAW,EAAE;IACjB,CAAC;IACD,OAAOrB,KAAK,CAACsB,IAAI,CAACV,gBAAgB,EAAEC,oBAAoB,CAAC,CACpDL,IAAI,CAAEe,cAAc,IAAK;MACtB,IAAI,CAACA,cAAc,EAAE;QACjB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MACI,OAAO;QACH,GAAGd,cAAc;QACjBe,MAAM,EAAEF,cAAc,CAACZ,IAAI,CAACc,MAAM;QAClCT,KAAK,EAAEO,cAAc,CAACZ,IAAI,CAACK;MAC/B,CAAC;IACL,CACJ,CAAC,CACAU,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEF,KAAK,CAAC;MACnE,OAAO;QACH,GAAGjB,cAAc;QACjBe,MAAM,EAAE,IAAI;QACZT,KAAK,EAAE;MACX,CAAC;IACL,CAAC,CAAC;EACV,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAAC;EACpD,CAAC,CAAC;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}